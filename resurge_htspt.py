# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# proj_cal.py
# Created on: 2014-04-28 15:29:38.00000
#   (generated by ArcGIS/ModelBuilder)
# Description:
# ---------------------------------------------------------------------------

##"C:\Python27\ArcGIS10.2\python.exe" "C:\Users\mmiller\Dropbox\Research\Urban\Papers\City Center Resurgence\GIS\Programs\resurge_htspt.py"

# Import arcpy module
import arcpy
from arcpy import env
import sys
import shapefile
import shpUtils
import timeit

path = "L:\\Research\\Resurgence\\GIS\\"

#Overwriting allowed
arcpy.env.overwriteOutput = True

#Working Directory
arcpy.env.workspace = "L:\\Research\\Resurgence\\GIS\\Working Files\\Output\\Test"
arcpy.env.qualifiedFieldNames = False

#Inputs

state_10 = path+"urban_area_2010\\states_2010\\"
#tract_00 = path+"2000\\"
tract_12 = path+"2012\\"
#urban_00 = path+"urban_area_2000\\"
urban_10 = path+"urban_area_2010\\"

wac = path+"Working Files\\wac_trct.xlsx\\wac$"
acs = path+"Working Files\\ACS_2012.xlsx\\ACS_2012$"
dec = path+"Working Files\\DEC_2000.xlsx\\DEC_2000$"
#dec = path+"Working Files\\DEC_2000.csv"
ncdb = "L:\\Research\\Resurgence\\Working Files\\NCDB_forGstar.xlsx\\NCDB$"

# Local variables:
urban_area_tracts_0  = "urban_area_tracts_0.shp"
us_states_2010       = state_10 + "us_states_2010.shp"
#urban_areas_2000_shp = urban_00 + "urban_areas_2000.shp"
#ua_us_tracts_00      = urban_00 + "ua_us_tracts_00.shp"
urban_areas_2010_shp = urban_10 + "urban_areas_2010.shp"
#us_tracts_2000       = tract_00+"US_tract_2000.shp"
layerName            = "urban_tracts_lyr"
layer_ncdb            = "ua_ncdb_lyr"
layer_dec            = "ua_dec_lyr"
valid_trcts          = "valid_trcts"
uat_hspt_hi          = "uat_hspt_hi"
uat_hspt_lyr         = "uat_hspt_lyr"
uat_split_lyr        = "uat_split_lyr"
#uat_cen_cluster     = "uat_cen_cluster"

uat_emp_hspt_dis   = path+"Working Files\\Output\\uat_emp_hspt_dis.shp"
uat_emp_hspt_split = path+"Working Files\\Output\\uat_emp_hspt_split.shp"
uat_hspt_max       = path+"Working Files\\Output\\uat_hspt_max.dbf"

#print "- Area clip of Census Tracts"
# Process: Clip (2)
#arcpy.Clip_analysis(us_tracts_2000, urban_areas_2000_shp, ua_us_tracts_00, "")

#Top n Urban Areas to loop over

n = 100

#--------------------------------------------------------------------

#Import Urban Area List for Loop

f = open(path+'Working Files\\ua_rank_2010.txt', 'r')

ua_list = []

for lines in f:
		ua_list = ua_list + [lines.replace("\n","")]


del ua_list[0]

#print ua_list[:n]

st = []

for c in ua_list:
		st = st + [c[c.find(",")+2:]]

st_tuple = []
for s in st:
		st_tuple = st_tuple + [tuple(s.split("--"))]

# for c in range(N):
		# print ua[c]
		# st = st_tuple[c]
		# for s in range(len(st)):
				# print st[s]


		#sys.exit(0)

f.close()
#------------------------------------------------------------------------

#ID UTM ZONE

#UTM Dictionary

# utm_dict = {}
# utm_dict['10'] = (120,126)
# utm_dict['11'] = (114, 119)
# utm_dict['12'] = (108, 113)
# utm_dict['13'] = (102, 107)
# utm_dict['14'] = (96, 101)
# utm_dict['15'] = (90, 95)
# utm_dict['16'] = (84, 89)
# utm_dict['17'] = (78, 83)
# utm_dict['18'] = (72, 77)

#UTM Tuple

utm_tuple = [(120, 127, '10')]+[(114,119,'11')]+[(108, 113, '12')]+[(102,107,'13')]\
           +[(96,101, '14')]+[(90,95, '15')]+[(84,89, '16')]+[(78,83,'17')]+[(72,77,'18')]+[(66,71,'19')]


#print utm_tuple

#Pull longitude from tracts file

#Import Urban Area List for Loop

f = open(path+'urban_area_2010\\Urban_Areas_Long_2010.txt', 'r')

ua_list_2 = []

for lines in f:
		ua_list_2 = ua_list_2 + [lines.replace("\n","")]


del ua_list_2[0]
ua_tuple = []

for u in ua_list_2:
		ua_tuple = ua_tuple + [tuple(u.split("*"))]

#print ua_list[:n]

ua_dict = {}

for u in ua_tuple:
		#print u[1]
		ua_dict[u[0]] = abs(int(float(u[1])))

#print ua_dict['Boston, MA--NH--RI']

long_dict = {}

for u in ua_dict:
		for utm in utm_tuple:
				if ua_dict[u] >= utm[0] and ua_dict[u] <= utm[1]: long_dict[u] = utm[2]

#print ua_dict
# print ua_dict['"Los Angeles--Long Beach--Anaheim, CA"']
# print ua_dict['"Santa Barbara, CA"']

# print long_dict['"Los Angeles--Long Beach--Anaheim, CA"']
# print long_dict['"Santa Barbara, CA"']

# print long_dict

#------------------------------------------------------------------

n_s = 105	
n_e = 111

for c in range(n_s, n_e):

		start = timeit.default_timer()

		#Local variables for called city/urban area

		ua = ua_list[c]
		st = st_tuple[c]

		#Module 1 - Relevant Tracts

		state_tracts_union = "state_tracts_union.shp"
		state_tracts_clip = "state_tracts_clip.shp"
		state_tracts_union_prj = "state_tracts_union_prj.shp"
		urban_area_tracts = "urban_area_tracts_"+str(c)+".shp"
		#ua_tracts_00 = "urban_area_tracts00_"+str(c)+".shp"

		#Module 2 - LEHD Join and Emp Clusters

		urban_area_join   = "urban_area_lehd_join_"+str(c)+".shp"
		ua_lehd_acs = "ua_lehd_acs_"+str(c)+".shp"
		ua_dec = "ua_dec_"+str(c)+".shp"
		urban_area_tracts_prj = "urban_area_tracts_prj.shp"
		uat_emp_hspt = "uat_emp_hspt_"+str(c)+".shp"

		#uat_inc_hspt00 = "uat_inc_hspt00_"+str(c)+".shp"
		#uat_pw_hspt00  = "uat_pw_hspt00_"+str(c)+".shp"
		urban_area = "urban_area"

		#Module 3 - City Center Definition

		uat_cen_cluster = "uat_cen_cluster_"+str(c)+".shp"
		uat_emp_hspt_dis = "uat_emp_hspt_dis.shp"
		uat_emp_hspt_split = "uat_emp_hspt_split.shp"
		uat_hspt_max = "uat_hspt_max.dbf"
		uat_cen_point = "uat_cen_point_"+str(c)+".shp"
		urban_area_lyr = "urban_area_lyr"
		ua_ncdb = "ua_ncdb.shp"

		##MODULE 1

		print "("+str(c)+") "+ua
		
		print "- Join NCDB Data"
		# Process: Feature Layer
		arcpy.MakeFeatureLayer_management (ua_lehd_acs,  layer_ncdb)
		# Process: Add Join
		arcpy.AddJoin_management(layer_ncdb, "GEOID", ncdb, "geo2010", "KEEP_COMMON")
		arcpy.CopyFeatures_management(layer_ncdb, ua_ncdb)
		
		print "- Add Pdens Field"
		# Process: Add Field
		arcpy.AddField_management(ua_ncdb, "pdens", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")
				
		years = ['1970','1980','1990','2000','2010']
		
		no_seventy = ['75','78','98']
		
		for y in years:

			minc   = "minc"+y
			shrwht = "shrwht"+y
			pop    = "pop"+y
			op     = "["+pop+"]/[AREA]"
			
			uat_inc_hspt = "uat_inc_hspt_"+str(c)+"_"+y+".shp"
			uat_pw_hspt  = "uat_pw_hspt_"+str(c)+"_"+y+".shp"	
			
			print "- Compute Pop Dens "+y
			# Process: Calculate Field
			arcpy.CalculateField_management(ua_ncdb, "pdens", op, "VB", "")		
			
			print "- Income and Race Clusters - 1250 m ["+y+"]"
			# Process: Hot Spot Analysis (Getis-Ord Gi*)
			arcpy.HotSpots_stats(ua_ncdb, minc, uat_inc_hspt, "FIXED_DISTANCE_BAND", "EUCLIDEAN_DISTANCE", "NONE", "1250", "", "")
			arcpy.HotSpots_stats(ua_ncdb, shrwht, uat_pw_hspt, "FIXED_DISTANCE_BAND", "EUCLIDEAN_DISTANCE", "NONE", "1250", "", "")

		stop = timeit.default_timer()

		print "Time:" + str((stop - start)/60)
